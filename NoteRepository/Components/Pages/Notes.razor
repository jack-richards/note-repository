@page "/"
@inject MongoDatabase.MongoDbService MongoDbService
@using MongoDB.Bson

@rendermode InteractiveServer

<h3>Notes</h3>

@if (notes == null) {
    <p>Loading...</p>
} else if (notes.Count == 0) {
    <p>No notes found.</p>
} else {
    @foreach (var note in notes) {
        <div class="card">
            <div class="card-body">
                <a href="/notes/@note.Name">@note.Name</a>
                <a @onclick="() => deleteNote(note)" class="btn btn-primary">Delete</a>
            </div>
        </div>
    }
}

@code {
    private List<Components.Models.NoteTitleDto> ?notes;

    protected override async Task OnInitializedAsync()
    {
        notes = await MongoDbService.GetNoteTitlesAsync();
    }

    private async Task deleteNote(Components.Models.NoteTitleDto note)
    {
        // Delete note from local list.
        notes.Remove(note);
        // Delete note in database.
        await MongoDbService.deleteNote(note);
    }
}